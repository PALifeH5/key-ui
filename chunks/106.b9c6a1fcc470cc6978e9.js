webpackJsonp([106],{622:function(e,n){e.exports="# checkbox.js\n\n`{ CheckboxIcon, Checkbox, CheckboxItem, CheckboxGroup, RadioGroup, TiledCheckboxGroup, BaseCheckboxGroup }`\n\n## CheckboxIcon\n\nCheckbox 的图标。\n\n### API\n\n| props | 说明 | 类型 | 默认值 | 必需 | \n|:--|:--|:--|:--|:--|\n| type | 图标类型 | 'circle', 'square', 'no-border' |  | 是 |\n| checked | 是否勾选 |  Boolean | false | |\n| disabled | 是否禁用 |  Boolean | false | |\n| name | 给 `<input type=\"checkbox\">` 标签的 name |  String | | |\n| value | 给 `<input type=\"checkbox\">` 标签的 value |  String | | |\n\n## Checkbox\n\n勾选框，CheckboxIcon + 一段文字。常用于条款等位置。\n\n### API \n\n| props | 说明 | 类型 | 默认值 | 必需 | \n|:--|:--|:--|:--|:--|\n| type | 图标类型 | 'circle', 'square', 'no-border' | 'circle' | |\n| disabled | 是否禁用 |  Boolean | false | |\n| defaultChecked | 是否默认勾选 | objectKeyProp | false | |\n| checked | 是否勾选（受控） | objectKeyProp | false | |\n| checkedMap | 勾选值的映射 | { checked: objectKeyProp, unchecked: objectKeyProp } | { checked: true, unchecked: false } | |\n| onChange | 勾选值改变回调 | Event => {} | | |\n| children | 勾选框文字 | ReactNode | | |\n| name | 同上 | | | |\n| value | 同上 | | | |\n\n### Getter\n\n- `checked`: checkedMap 中的 checked 或者 unchecked 值，默认为 `true` 和 `false`\n- `name`: `<input type=\"checkbox\">` 标签的 name\n- `value`: `<input type=\"checkbox\">` 标签的 value\n\n## CheckboxItem\n\n继承自 Checkbox，但是 render 函数渲染为一个 [ListItem](#/api/list-item)。\n\n### API\n\n以下为 CheckboxItem 自己的属性：\n\n| props | 说明 | 类型 | 默认值 | 必需 | \n|:--|:--|:--|:--|:--|\n| iconOnRight | 勾选框是否在右侧显示，默认左侧 | Boolean | false | |\n| type | 图标类型 | 'circle', 'square', 'no-border' | 'circle' | |\n| disabled | 是否禁用 |  Boolean | false | |\n| defaultChecked | 是否默认勾选 | objectKeyProp | false | |\n| checked | 是否勾选（受控） | objectKeyProp | false | |\n| checkedMap | 勾选值的映射 | { checked: objectKeyProp, unchecked: objectKeyProp } | { checked: true, unchecked: false } | |\n| onChange | 勾选值改变回调 | Event => {} | | |\n\n以下为传递给 ListItem 属性：\n\n| props | 说明 | 类型 | 默认值 | 必需 | \n|:--|:--|:--|:--|:--|\n| icon | 左侧按钮，iconOnRight=true 才生效 | IconNode | | |\n| arrow | 右侧箭头，iconOnRight=false 才生效 | ReactNode | | |\n| title | 标题 | ReactNode | | |\n| subTitle | 副标题 | ReactNode | | |\n| content | 右侧内容 | ReactNode | | |\n| titleWrap | 右侧箭头 | Boolean | true | |\n| alignContent | 内容对齐方式 | 'left', 'right' | 'right' | |\n\n## CheckboxGroup\n\nListItem 形式的复选组，可以同时选择一组数据中的多个值。值的数组是乱序的，根据用户操作时序而不同。\n\n### API\n\n| props | 说明 | 类型 | 默认值 | 必需 | \n|:--|:--|:--|:--|:--|\n| data | 选择数据 | \\[{ value: objectKeyProp, label: ReactNode, diabled: Boolean }\\] | | |\n| value | 当前选择值（受控） | \\[objectKeyProp\\] | | |\n| defaultValue | 默认选择值 | \\[objectKeyProp\\] | | |\n| onChange | 改变回调 | (objectKeyProp, Event) => {} | | |\n| iconOnRight | 勾选框是否在右侧显示，默认左侧 | Boolean | false | |\n| type | 图标类型 | 'circle', 'square', 'no-border' | 'square' | |\n\n### Getter\n\n- `value` 当前选择值。\n\n## RadioGroup\n\nListItem 形式的单选组，基于 CheckboxGroup。\n\n| props | 说明 | 类型 | 默认值 | 必需 | \n|:--|:--|:--|:--|:--|\n| data | 选择数据 | \\[{ value: objectKeyProp, label: ReactNode, diabled: Boolean }\\] | | |\n| value | 当前选择值（受控） | objectKeyProp | | |\n| defaultValue | 默认选择值 | objectKeyProp | | |\n| onChange | 改变回调 | (objectKeyProp, Event) => {} | | |\n| iconOnRight | 勾选框是否在右侧显示，默认左侧 | Boolean | false | |\n| type | 图标类型 | 'circle', 'square', 'no-border' | 'circle' | |\n\n### Getter\n\n- `value` 当前选择值。\n\n## TiledCheckboxGroup\n\n平铺形式的单选组/复选组，常见于购物网站选商品规格、标签等。\n\n| props | 说明 | 类型 | 默认值 | 必需 | \n|:--|:--|:--|:--|:--|\n| data | 选择数据 | \\[{ value: objectKeyProp, label: ReactNode, diabled: Boolean }\\] | | |\n| multiple | 是否支持复选 | Boolean | false | |\n| value | 当前选择值（受控） | objectKeyProp（单选） 或者 \\[objectKeyProp\\] | | |\n| defaultValue | 默认选择值 | objectKeyProp（单选） 或者 \\[objectKeyProp\\] | | |\n| onChange | 改变回调 | (objectKeyProp, Event) => {} | | |\n\n### Getter\n\n- `value` 当前选择值。\n\n## BaseCheckboxGroup\n\nBaseCheckboxGroup 为单选组/复选组的基类，本身没有任何渲染。前面三个单选/复选组都是基于此组件，只是 override 部分函数，加上 render。如果想自己实现一个不同表现形式的单选组/复选组，可以扩展此组件（进阶）。\n\n### API\n\n| props | 说明 | 类型 | 默认值 | 必需 | \n|:--|:--|:--|:--|:--|\n| data | 选择数据 | \\[{ value: objectKeyProp, label: ReactNode, diabled: Boolean }\\]  | | |\n| value | 当前选择值（受控） | \\[objectKeyProp\\] | | |\n| defaultValue | 默认选择值 | \\[objectKeyProp\\] | | |\n| onChange | 改变回调 | (objectKeyProp, Event) => {} | | |\n\n### Getter\n\n- `value` 当前选择值。\n"}});