webpackJsonp([78],{623:function(n,t){n.exports='# 快速入门\n\n## 安装\n\n```bash\nnpm i --save key-ui key-utils --registry=http://npmjs.palife.com:7001\n```\n\n此项目依赖于 `react`, `react-dom` < 16.0, `react-tap-event-plugin` 库，如果你的项目没有依赖这些库，还需要额外进行安装。由于这三个库有[版本对应关系](https://github.com/zilverline/react-tap-event-plugin)，需要根据项目情况安装。下面举个例子：\n\n```bash\nnpm i --save react@15.4.2 react-dom@15.4.2 react-tap-event-plugin@2.0.1\n```\n\n注意，KeyUI 是面向于移动端的，大部分组件的点击事件依赖于 `react-tap-event-plugin` 的 `onTouchTap` 事件，所以务必在项目中调用 `injectTapEventPlugin()` 为 React 注册该事件。\n\n## 引用\n\nKeyUI 提供了三种引用形式。\n\n### 一、`import { SomeComponent } from \'key-ui/some-component\'`\n\n这种形式将各个组件独立打包，大大减少了文件大小。组件能自动处理相互依赖和 CSS 引用的问题。缺点是开发者需要寻找组件与发布文件的对应关系，可参考[组件列表](http://git.palife.com/PA-H5/key-ui#组件列表)。**推荐使用此种形式。**\n\n```js\nimport { NavBar } from \'key-ui/nav-bar\'\nimport { List, ListItem } from \'key-ui/list\'\n\nconst MyPage = () => (\n    <div>\n        <NavBar title="我的页面" />\n        <List header="列表">\n            <ListItem title="标题一" content="内容" />\n            <ListItem title="标题二" content="内容" />\n        </List>\n    </div>\n)\n```\n\n### 二、`import { SomeComponent } from \'key-ui\'`\n\n这种形式将所有组件的 JS 和 CSS 打包成一个 `index.js`，开发者所有组件都通过 `index.js` 引用，也无需关心 CSS 问题。使用方便，缺点是包比较大一点（`key-ui 2.0.0` 版本为 317KB）。\n\n```js\nimport { NavBar, List, ListItem } from \'key-ui\'\n\nconst MyPage = () => (\n    <div>\n        <NavBar title="我的页面" />\n        <List header="列表">\n            <ListItem title="标题一" content="内容" />\n            <ListItem title="标题二" content="内容" />\n        </List>\n    </div>\n)\n```\n\n### 三、换肤 / 单独引用 CSS\n\n此种形式将组件的 JS 集合打包，CSS 集合打包，开发者引用组件的时候只会自动引入 JS，整个组件库的 CSS 需要自己处理如何引入。优点是独立了组件代码和样式，**方便换肤或者开发者只引用 css 样式**。\n\n换肤也提供了整体和独立打包的两种方式：\n\n**整体**（`key-ui 2.0.0` 版本为 JS 238KB，CSS 51KB）\n\n```js\nimport { NavBar, List, ListItem } from \'key-ui/lib-int/index\'\nimport \'key-ui/lib-int/index.css\' // 注意，此文件中的 css 类名可能会经过你的 css loader 处理，需要排除掉\n\nconst MyPage = () => (\n    <div>\n        <NavBar title="我的页面" />\n        <List header="列表">\n            <ListItem title="标题一" content="内容" />\n            <ListItem title="标题二" content="内容" />\n        </List>\n    </div>\n)\n```\n\n**独立**（可以给单个组件换肤）\n\n```js\nimport { NavBar } from \'key-ui/lib/nav-bar\'\nimport { List, ListItem } from \'key-ui/lib/list\'\nimport \'key-ui/lib/nav-bar.css\' // 注意，此文件中的 css 类名可能会经过你的 css loader 处理，需要排除掉\nimport \'key-ui/lib/list.css\' // 注意，此文件中的 css 类名可能会经过你的 css loader 处理，需要排除掉\n\nconst MyPage = () => (\n    <div>\n        <NavBar title="我的页面" />\n        <List header="列表">\n            <ListItem title="标题一" content="内容" />\n            <ListItem title="标题二" content="内容" />\n        </List>\n    </div>\n)\n\n```\n\n'}});