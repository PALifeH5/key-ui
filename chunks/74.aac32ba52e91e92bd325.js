webpackJsonp([74],{601:function(n,e){n.exports='# 组件的 style\n\n如 [rest 参数处理](#/docs/rest-handling) 提到，KeyUI 组件会自动传递开发者提供的 `style` 属性，应用到组件对应的子节点。\n\n## 三种 CSS 样式引用\n\n### External CSS Stylesheet（外部样式）\n\n外部样式即把 CSS 样式独立到一个文件，通过 link 形式引用，如下：\n\n```html\n<link rel="stylesheet" href="your-css-file-url" type="text/css">\n```\n\n### Internal CSS Stylesheet（内部样式）\n\n内部样式把 CSS 样式通过头部的 `<style>` 标签引用，如下：\n\n```html\n<style type="text/css">\n.red {\n    color: #f00;\n}\n</style>\n```\n\n### Inline CSS Styles（内联样式）\n\n内联样式通过 HTML 元素的 `style` 属性传递样式，如下：\n\n```html\n<div style="color: #f00" >\n    \x3c!-- HTML content --\x3e\n</div>\n```\n\n三种样式应用的优先级为：外部样式 < 内部样式 < 内联样式。\n\n## KeyUI 组件 CSS 样式引用\n\nKeyUI 组件的 CSS 样式都是通过内部样式使用的（少部分需要在 JS 代码动态改样式的除外，但这部分与组件的 style prop 不冲突）。**因此，开发者可以放心的给组件传递 style prop，其应用的优先级会比组件本身的样式高**。\n\n```html\n<Button style={{ color: \'#f00\' }}>\n    按钮文本\n</Button>\n```\n\n'}});