webpackJsonp([95],{663:function(n,e){n.exports="# select.js\n\n`{ InlineSelect, InlineCascade, Select }`\n\n## InlineSelect\n\n内联选择器。\n\n### API\n\n| props | 说明 | 类型 | 默认值 | 必需 |\n|:--|:--|:--|:--|:--|\n| data | 选择数据 | selectDataProp | | |\n| dataKeyMap | 数据键值映射 | { value: String, label: String } | { value: 'value', label: 'label' } | |\n| value | 值（受控） | objectKeyProp（单列） 或 \\[objectKeyProp\\] | | |\n| defaultValue | 默认值 | objectKeyProp（单列） 或 \\[objectKeyProp\\] | | |\n| onChange | 变更回调 | (value(s), pair(s), columnIndex) => {} | | |\n\nvalue 必须是合法的才会成为受控组件。selectDataProp 为选择数据专用的属性，可以有两种形式：\n\n- 单列数据格式\n\n```js\n[\n    {value: 1, label: 1},\n    {value: 2, label: 2}\n]\n```\n\n- 多列数据格式（里面数据可含单列也可含多列）\n\n```js\n[\n    // 列1数据\n    [\n        {value: 1, label: 1},\n        {value: 2, label: 2}\n    ],\n    // 列2数据\n    [\n        {value: 3, label: 3},\n        {value: 4, label: 4}\n    ],\n]\n```\n\n默认会去 `data` 里面的 `value` 和 `label`，如果你的数据键不是这两个，可以通过 `dataKeyMap` 指定。\n\n**组件会根据所传数据自动判断单列还是多列。单列格式和多列格式会影响 `value`, `defaultValue`, `onChange` 等参数格式。**\n\n### Getter\n\n- `wrappedValue` 标准格式（即数组形式，单列也是数组）的值\n- `wrappedPairs` 标准格式的 `{value,label}` 对\n- `value` 值，单列为 `objectKeyProp`，多列为 `[objectKeyProp]`\n- `pairs` 对，单列为 `{value,label}`，多列为 `[{value,label}]`\n\n### 单元测试/E2E 测试\n\nInlineSelect 是所有滚动选择组件的基础组件，为方便测试，其 panel 节点监听了一个自定义事件来完成自动选择：\n\n```js\n// $0 为选中的 '.k-inline-select-panel' 元素\nvar e = new Event('set_inline_select_index')\ne.columnIndex = 0 // 列索引，从0开始，超出范围会被忽略\ne.rowIndex = 0 // 行索引，从0开始，超出范围会被忽略\n$0.dispatchEvent(e) // $0 为选择的k-inline-select-panel元素，需要替换\n```\n\n通过这种方法可以给所有的选择组件和日期组件编写自动测试用例。\n\n## InlineCascade\n\n内联的级联选择器。\n\n### API\n\n| props | 说明 | 类型 | 默认值 | 必需 |\n|:--|:--|:--|:--|:--|\n| data | 选择数据 | cascadeDataProp | | |\n| dataKeyMap | 数据键值映射 | { value: String, label: String, children: String } | { value: 'value', label: 'label', children: 'children' } | |\n| value | 值（受控） | \\[objectKeyProp\\] | | |\n| defaultValue | 默认值 | \\[objectKeyProp\\] | | |\n| onChange | 变更回调 | (values, pairs, columnIndex) => {} | | |\n\ncascadeDataProp 为级联数据专用属性。形式如下：\n\n```js\n[\n    // 列1数据\n    {\n        value: 1,\n        label: 1,\n        // 列1值为1时候的列2数据\n        children: [\n            {value: 11, label: 11},\n            {value: 12, label: 12},\n        ]\n    },\n    // 列1数据\n    {\n        value: 2,\n        label: 2,\n        // 列1值为2时候的列2数据\n        children: [\n            {value: 21, label: 21}\n        ]\n    }\n]\n```\n\n### Getter\n\n- `value` 值，`[objectKeyProp]`\n- `pairs` 对，`[{value,label}]`\n\n## Select\n\n弹出式选择器，数据可以是级联，也可以不是级联的。\n\n### API\n\n| props | 说明 | 类型 | 默认值 | 必需 |\n|:--|:--|:--|:--|:--|\n| data | 选择数据 | selectDataProp 或 cascadeDataProp | | |\n| dataKeyMap | 数据键值映射 | { value: String, label: String, children: String } | { value: 'value', label: 'label', children: 'children' } | |\n| value | 值（受控） | objectKeyProp（单列） 或 \\[objectKeyProp\\] | | |\n| defaultValue | 默认值 | objectKeyProp（单列） 或 \\[objectKeyProp\\] | | |\n| title | 弹出标题 | ReactNode | | |\n| confirmButton | 弹出确认按钮 | ReactNode | '确定' | |\n| cancelButton | 弹出取消按钮 | ReactNode | '取消' | |\n| renderInline | 渲染内联部分的函数 | pair(s) => ReactNode | 拼接选中的 label | |\n| disabled | 是否禁用 | Boolean | false | |\n| cascade | 数据是否级联 | Boolean | false | |\n| defaultOpen | 默认弹出 | Boolean | false | |\n| onChange | 变更回调 | (value(s), pair(s)) => {} | | |\n| onCancel | 取消回调 | (value(s), pair(s)) => {} | | |\n\ncancelButton 如果为 `null` 则点击遮罩无法缩回弹出面板。\n\ndefaultOpen 只在构造函数有用。\n\n### Getter\n\n- `wrappedValue` 标准格式（即数组形式，单列也是数组）的值\n- `wrappedPairs` 标准格式的 `{value,label}` 对\n- `value` 值，单列为 `objectKeyProp`，多列为 `[objectKeyProp]`\n- `pairs` 对，单列为 `{value,label}`，多列为 `[{value,label}]`\n\n\n"}});