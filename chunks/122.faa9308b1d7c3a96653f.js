webpackJsonp([122],{674:function(n,e){n.exports="import React, { Component } from 'react'\nimport { RefreshControl } from 'key-ui/refresh-control'\nimport { NavBar } from 'key-ui/nav-bar'\n\nconst cData = [\n    require('./images/demo2.jpg'),\n    require('./images/demo3.jpg'),\n    require('./images/demo4.jpg'),\n    require('./images/demo5.jpg'),\n    require('./images/demo6.jpg'),\n    require('./images/demo7.jpg'),\n    require('./images/demo8.jpg'),\n    require('./images/demo9.jpg'),\n]\n\nexport default class Demo extends Component {\n    state = {\n        data: cData,\n        hasMore: true,\n        index: 5,\n    }\n\n    handleOnPullDown = (onSuccess, onFail) => {\n        setTimeout(() => {\n            this.setState({\n                data: cData,\n                hasMore: true,\n                index: 5,\n            }, () => {\n                onSuccess()\n            })\n        }, 3000)\n    }\n\n    handleOnPullUp = (onSuccess) => {\n        setTimeout(() => {\n            if (this.state.index <= 0) {\n                this.setState({\n                    hasMore: false,\n                }, () => {\n                    onSuccess()\n                })\n            }\n            else {\n                this.setState({\n                    data: [...this.state.data, cData[1], cData[2]],\n                    index: this.state.index - 1,\n                }, () => {\n                    onSuccess()\n                })\n            }\n        }, 3000)\n    }\n\n    render() {\n        const { data, hasMore } = this.state\n        return (\n            <div>\n                <NavBar title=\"RefreshControl Demo\" />\n                <RefreshControl\n                    onPullDown={this.handleOnPullDown}\n                    onPullUp={this.handleOnPullUp}\n                    hasMore={hasMore}\n                    isCustomized\n                    pullingStatus={(<div style={{ color: 'red' }}>下拉</div>)}\n                    enableRefreshStatus={(<div>可刷新</div>)}\n                    refreshingStatus={(<div>正在刷新</div>)}\n                    refreshedStatus={(<div>刷新成功</div>)}\n                    hasMoreStatus={(<div>上拉加载</div>)}\n                    noMoreStatus={(<div>没有更多加载</div>)}\n                    loadingStatus={(<div>正在加载</div>)}\n                >\n                    {\n                        data.map((str, i) => {\n                            const index = i\n                            return (<img style={{ width: '100%' }} key={index} src={str} alt=\"\" />)\n                        })\n                    }\n                </RefreshControl>\n            </div>\n        )\n    }\n}\n"}});